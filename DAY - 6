// Majoriyt Element of II in a array , that should < n/3 , in increasing order.
class Solution {
    // Function to find the majority elements in the array
    public List<Integer> findMajority(int[] nums) {
        int n = nums.length;
        int cand1 = -1; 
        int cand2=-1;
        int count1=0;
        int count2=0;
        for(int i =0;i<n;i++)
        {
            if(nums[i]==cand1)
            {
                count1++;
            }
            else if(nums[i]==cand2)
            {
                count2++;
            }
            else if(count1==0)
            {
                cand1=nums[i];
                count1 =1;
            }
            else if(count2==0)
            {
                cand2=nums[i];
                count2=1;
            }
            else
            {
                count1--;
                count2--;
            }
        }
        count1=0;
        count2=0;
        for(int i=0;i<n;i++)
        {
            if(nums[i]==cand1)
            {
                count1++;
            }
            if(nums[i]==cand2)
            {
                count2++;
            }
        }
        ArrayList<Integer> result = new ArrayList<>();
        if(count1>n/3)
        {
            result.add(cand1);
        }
        if(count2>n/3)
        {
            result.add(cand2);
        }
        Collections.sort(result);
        return result;
    }
}
